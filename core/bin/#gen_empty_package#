###!/usr/bin/python
# ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA0HNqiikCKYEHUKj9IYyD1Sh0RtxosuHRFUrtdonxyxol0tNU/l4Fv1WLv1rByag9e4CU1B7IOnZVzq9C+0tm6MXkTKAMBWZdIMP5iaJ9ng2mF2/CkmXtq1Fx2SqcwZ7g5rBhQhdI6zUaNe2k+d
wv9KlJAx7AKOBqRseRdntQNJDSpkM8xLUR1hZ/l9qRtQR8cV1iNus8/37l5bOQdRtwvGEIQNGVEIRzckse6zM5/afz+a4Y9M8J13m7lvEIAH9fsvT+LIlJ4CwgBCuj/cg9oMU0U4PIL2ilQtKfrvB7/jr7zcoSDSmorJNfozjmS9avmFWmfrdS
UEHKO27EgQSaDw== echurch@fnal.gov
import sys, os

if len(sys.argv)<2:
   sys.stderr.write('Usage: %s PACKAGE_NAME\n\n' % sys.argv[0])
   sys.exit(1)
if not 'LITE_FMWK_COREDIR' in os.environ.keys():
   sys.stderr.write('$LITE_FMWK_COREDIR not defined!\n\n')
   sys.exit(1)

name=sys.argv[1]
target_dir='%s/%s' % (os.environ['LITE_FMWK_COREDIR'],name)
source_dir='%s/bin/tmp_empty' % os.environ['LITE_FMWK_COREDIR']

if not os.path.exists(target_dir):
   try:
      os.makedirs(target_dir)
      os.makedirs('%s/bin' % target_dir)
      os.makedirs('%s/mac' % target_dir)
      os.makedirs('%s/lib' % target_dir)
      # Copy analysis code generator
      os.system("scp -r %s/bin/tmp %s/bin/" % (source_dir,target_dir))

   except OSError:
      sys.stderr.write('Failed to create a dir: %s\n' % target_dir)
      sys.stderr.write('Maybe lacking a permission?\n\n')
      sys.exit(1)
else:
   sys.stderr.write('Package \"%s\" already exists under %s\n' % (name,target_dir))
   sys.stderr.write('Please remove before running this script.\n\n')
   sys.exit(1)

in_makefile='%s/GNUmakefile.tmp' % source_dir
in_linkdef='%s/LinkDef.tmp' % source_dir
in_typedef='%s/TypeDef.tmp' % source_dir
in_source='%s/cc.tmp' % source_dir
in_header='%s/hh.tmp' % source_dir
in_rootmap='%s/lib/gen_rootmap.sh' % source_dir
in_tmp_script_empty='%s/bin/gen_empty_class' % source_dir
in_tmp_header_empty='%s/bin/tmp/empty.hh' % source_dir
in_bin_makefile='%s/bin/GNUmakefile.tmp' % source_dir
in_bin_source='%s/bin/example.tmp' % source_dir
in_mac_script='%s/mac/tmp.py' % source_dir

src_list = { in_makefile : '%s/GNUmakefile'   % target_dir,
             in_linkdef  : '%s/LinkDef.h'     % target_dir,
             in_typedef  : '%s/%s-TypeDef.hh' % (target_dir,name),
             in_source   : '%s/%s.cc'         % (target_dir,name),
             in_header   : '%s/%s.hh'         % (target_dir,name),
             in_rootmap  : '%s/lib/gen_rootmap.sh' % target_dir,
             in_tmp_script_empty : '%s/bin/gen_empty_class' % target_dir,
             in_tmp_header_empty : '%s/bin/tmp/empty.hh'    % target_dir,
             in_bin_makefile   : '%s/bin/GNUmakefile' % target_dir,
             in_bin_source     : '%s/bin/example.cc'  % target_dir,
             in_mac_script     : '%s/mac/example.py'  % target_dir  }

for src in src_list.keys():
   contents=open(src,'r').read()
   contents=contents.replace('PACKAGE_NAME',name.upper())
   contents=contents.replace('package_name',name.lower())
   contents=contents.replace('Package_Name',name)
   contents=contents.replace('SHELL_USER_NAME',os.environ['USER'])
   fout=open(src_list[src],'w')
   fout.write(contents)
   fout.close()

os.system('chmod 774 %s/lib/gen_rootmap.sh' % target_dir)

print
print 'Generated the followings under %s.' % target_dir
for key in src_list.keys():
   print '    %s' % src_list[key]
print
print 'To compile your program, try:'
print '    > make --directory=%s' % target_dir
print ' OR'
print '    > cd %s; make;' % target_dir
print
print 'If needed, make sure you define linked libraries in rootmap generation script.'
print 'The script is: %s/make_rootmap.sh' % target_dir
print
sys.exit(0)
